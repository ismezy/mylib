package ${basePackage}.rest;

import ${basePackage}.manager.${className}Manager;
import ${basePackage}.entity.${className};
import org.springframework.web.bind.annotation.*;
import com.fasterxml.jackson.annotation.JsonView;
import com.zy.mylib.base.model.BaseModel;
import com.zy.mylib.data.jpa.PageUtils;
import com.zy.mylib.webmvc.base.BaseRest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import javax.inject.Inject;
import com.zy.mylib.base.exception.BusException;
import org.springframework.validation.annotation.Validated;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

/**
 * TODO: 注释
 * @author 代码生成器
 */
//@RestController
//@RequestMapping("/填写rest地址")
public class ${className}Rest extends BaseRest {
  @Inject
  private ${className}Manager manager;

  @RequestMapping(value = "{id}", method = RequestMethod.GET)
  @JsonView(BaseModel.DetailView.class)
  public ${className} findOne(@PathVariable("id") String id) {
    Optional<${className}> ret = manager.findById(id);
    if(ret.isPresent()) {
      return ret.get();
    }
    throw BusException.builder().message("数据不存在").httpStatus(404).build();
  }

  @RequestMapping(value = "",method = RequestMethod.POST)
  @JsonView(BaseModel.DetailView.class)
  public ${className} addEntity(@Validated(BaseModel.AddCheck.class) @RequestBody  ${className} entity) {
    return manager.add(entity);
  }

  @RequestMapping(value = "",method = RequestMethod.PUT)
  @JsonView(BaseModel.DetailView.class)
  public ${className} updateEntity(@Validated(BaseModel.UpdateCheck.class) @RequestBody ${className} entity) {
    return manager.update(entity);
  }

  @RequestMapping(value = "{id}", method = RequestMethod.DELETE)
  public void remove(@PathVariable("id") String id) {
    manager.remove(id);
  }

  @GetMapping("/pager")
  public Page<${className}> findPage(Pageable pageable, ${className} filter) {
    Map<String, PageUtils.Operate> operateMap = new HashMap<String, PageUtils.Operate>();
    Map<String, Object> extParams = new HashMap<String, Object>();

    return manager.pager(pageable, filter, operateMap, extParams);
  }
}
